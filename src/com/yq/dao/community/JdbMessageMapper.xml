<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yq.dao.community.JdbMessageMapper" >
  <resultMap id="BaseResultMap" type="com.yq.entity.community.JdbMessage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yq.entity.community.JdbMessage" extends="BaseResultMap" >
    <result column="message_content" property="messageContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, open_id, publish_time, type,title
  </sql>
  <sql id="Blob_Column_List" >
    message_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jdb_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from jdb_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yq.entity.community.JdbMessage" >
    insert into jdb_message (id, open_id, publish_time, 
      type, title,message_content)
    values (#{id,jdbcType=BIGINT}, #{openId,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR}, #{messageContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yq.entity.community.JdbMessage" >
    insert into jdb_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="messageContent != null" >
        message_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="messageContent != null" >
        #{messageContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yq.entity.community.JdbMessage" >
    update jdb_message
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="messageContent != null" >
        message_content = #{messageContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yq.entity.community.JdbMessage" >
    update jdb_message
    set open_id = #{openId,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      message_content = #{messageContent,jdbcType=LONGVARCHAR},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yq.entity.community.JdbMessage" >
    update jdb_message
    set open_id = #{openId,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>